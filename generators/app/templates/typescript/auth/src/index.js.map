{"version":3,"file":"index.js","names":["AuthCustomPlugin","constructor","config","options","logger","foo","authenticate","user","password","cb","allow_access","pkg","allow_publish","allow_unpublish"],"sources":["index.ts"],"sourcesContent":["import {\n  PluginOptions,\n  AuthAccessCallback,\n  AuthCallback,\n  PackageAccess,\n  IPluginAuth,\n  RemoteUser,\n  Logger,\n} from '@verdaccio/types';\n\nimport {CustomConfig} from '../types/index';\n\n/**\n * Custom Verdaccio Authenticate Plugin.\n */\nexport default class AuthCustomPlugin implements IPluginAuth<CustomConfig> {\n  public logger: Logger;\n  private foo: string;\n  public constructor(config: CustomConfig, options: PluginOptions<CustomConfig>) {\n    this.logger = options.logger;\n    this.foo = config.foo;\n    return this;\n  }\n  /**\n   * Authenticate an user.\n   * @param user user to log\n   * @param password provided password\n   * @param cb callback function\n   */\n  public authenticate(user: string, password: string, cb: AuthCallback): void {\n    /**\n     * This code is just an example for demostration purpose\n      if (this.foo) {\n        cb(null, ['group-foo', 'group-bar']);\n      } else {\n        cb('error, try again', false);\n      }\n    */\n  }\n\n  /**\n   * Triggered on each access request\n   * @param user\n   * @param pkg\n   * @param cb\n   */\n  public allow_access(user: RemoteUser, pkg: PackageAccess, cb: AuthAccessCallback): void {\n    /**\n     * This code is just an example for demostration purpose\n    if (user.name === this.foo && pkg?.access?.includes[user.name]) {\n      this.logger.debug({name: user.name}, 'your package has been granted for @{name}');\n      cb(null, true)\n    } else {\n      this.logger.error({name: user.name}, '@{name} is not allowed to access this package');\n      cb('error, try again', false);\n    }\n     */\n  }\n\n  /**\n   * Triggered on each publish request\n   * @param user\n   * @param pkg\n   * @param cb\n   */\n  public allow_publish(user: RemoteUser, pkg: PackageAccess, cb: AuthAccessCallback): void {\n    /**\n     * This code is just an example for demostration purpose\n    if (user.name === this.foo && pkg?.access?.includes[user.name]) {\n      this.logger.debug({name: user.name}, '@{name} has been granted to publish');\n      cb(null, true)\n    } else {\n      this.logger.error({name: user.name}, '@{name} is not allowed to publish this package');\n      cb('error, try again', false);\n    }\n     */\n  }\n\n  public allow_unpublish(user: RemoteUser, pkg: PackageAccess, cb: AuthAccessCallback): void {\n    /**\n     * This code is just an example for demostration purpose\n    if (user.name === this.foo && pkg?.access?.includes[user.name]) {\n      this.logger.debug({name: user.name}, '@{name} has been granted to unpublish');\n      cb(null, true)\n    } else {\n      this.logger.error({name: user.name}, '@{name} is not allowed to publish this package');\n      cb('error, try again', false);\n    }\n     */\n  }\n}\n"],"mappings":";;;;;;;AAYA;AACA;AACA;AACe,MAAMA,gBAAN,CAA4D;EAGlEC,WAAW,CAACC,MAAD,EAAuBC,OAAvB,EAA6D;IAC7E,KAAKC,MAAL,GAAcD,OAAO,CAACC,MAAtB;IACA,KAAKC,GAAL,GAAWH,MAAM,CAACG,GAAlB;IACA,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;;;EACSC,YAAY,CAACC,IAAD,EAAeC,QAAf,EAAiCC,EAAjC,EAAyD;IAC1E;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACG;EAED;AACF;AACA;AACA;AACA;AACA;;;EACSC,YAAY,CAACH,IAAD,EAAmBI,GAAnB,EAAuCF,EAAvC,EAAqE;IACtF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACG;EAED;AACF;AACA;AACA;AACA;AACA;;;EACSG,aAAa,CAACL,IAAD,EAAmBI,GAAnB,EAAuCF,EAAvC,EAAqE;IACvF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACG;;EAEMI,eAAe,CAACN,IAAD,EAAmBI,GAAnB,EAAuCF,EAAvC,EAAqE;IACzF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACG;;AA1EwE"}